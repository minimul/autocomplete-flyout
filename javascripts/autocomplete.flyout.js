// Generated by CoffeeScript 1.6.3
(function() {
  this.AutocompleteFlyout = (function() {
    function AutocompleteFlyout(selector, data, options) {
      var el, elements, _base, _base1, _i, _len,
        _this = this;
      this.data = data;
      this.options = options != null ? options : {};
      (_base = this.options).menuName || (_base.menuName = 'hierarchy');
      (_base1 = this.options).onChoosen || (_base1.onChoosen = function(item, menu, caller) {
        if (!item.hasClass('category')) {
          caller.prev().val(item.text());
          return menu.kill();
        }
      });
      this.menuId = "#" + this.options.menuName;
      if ($(this.menuId).length === 0) {
        this.buildMenu();
      }
      this.setupCustomAutocomplete();
      elements = $(selector);
      for (_i = 0, _len = elements.length; _i < _len; _i++) {
        el = elements[_i];
        el = $(el);
        this.setupAutocomplete(el);
        this.buildMenuButton(el);
      }
    }

    AutocompleteFlyout.prototype.setupCustomAutocomplete = function() {
      return $.widget("custom.catcomplete", $.ui.autocomplete, {
        _renderMenu: function(ul, items) {
          var currentCategory,
            _this = this;
          currentCategory = "";
          return $.each(items, function(index, item) {
            if (item.category !== currentCategory) {
              ul.append("<li class='ui-autocomplete-category'>" + item.category + "</li>");
              currentCategory = item.category;
            }
            return _this._renderItem(ul, item);
          });
        }
      });
    };

    AutocompleteFlyout.prototype.setupAutocomplete = function(el) {
      return el.catcomplete({
        source: this.data,
        delay: 0,
        minLength: 2
      });
    };

    AutocompleteFlyout.prototype.buildMenuButton = function(el) {
      return el.after('<span/>').next().button({
        icons: {
          primary: 'ui-icon-triangle-1-s'
        },
        text: false
      }).css('width', '1em').fgMenu({
        content: $(this.menuId).html(),
        flyOut: true,
        flyoutWidth: this.options.flyoutWidth || null,
        shiftFlyoutFromTop: this.options.shiftFlyoutFromTop || 0,
        maxHeight: this.options.maxHeight || 180,
        width: this.options.width || 180,
        onChoosen: this.options.onChoosen,
        positionOpts: {
          posX: 'left',
          posY: 'bottom',
          offsetX: this.options.offsetX || 0,
          offsetY: this.options.offsetY || 0,
          directionH: 'right',
          directionV: 'down',
          detectH: true,
          detectV: false,
          linkToFront: false
        }
      });
    };

    AutocompleteFlyout.prototype.buildMenu = function() {
      var chart, currentCategory, html, _i, _len, _ref;
      html = ["<div id='" + this.options.menuName + "' style='display:none;'><ul>"];
      currentCategory = "";
      _ref = this.data;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        chart = _ref[_i];
        if (chart.category !== currentCategory) {
          if (currentCategory !== "") {
            html.push('</li></ul>');
          }
          html.push("<li><a class='category' href='#'>" + chart.category + "</a><ul>");
          currentCategory = chart.category;
        }
        html.push("<li><a href='#' class='label'>" + chart.label + "</a>");
      }
      html.push("</ul></div>");
      return $('body').append(html.join(''));
    };

    return AutocompleteFlyout;

  })();

}).call(this);
