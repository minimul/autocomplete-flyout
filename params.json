{"name":"Autocomplete-flyout","tagline":"Web component to either autocomplete or browse through a large data set","body":"\r\n## Autocomplete-flyout web component\r\n\r\n![using-the-flyout](https://github.com/minimul/autocomplete-flyout/raw/master/img/using-the-flyout.png)\r\n\r\n![using-autocomplete](https://github.com/minimul/autocomplete-flyout/raw/master/img/using-autocomplete.png)\r\n\r\nFor complex use cases with large datasets in where autocomplete support is desired but also being able to browse the available options via a dropdown button.\r\n\r\nTechnically, the widget leverages jqueryui (1.8.x) [autocomplete](http://api.jqueryui.com/1.8/autocomplete/) and [button](http://api.jqueryui.com/1.8/button/) as well as this fork of [jQuery-Menu](https://github.com/minimul/jQuery-Menu).\r\n\r\n### Getting started\r\nIt is best to merely look at the [example source code](https://github.com/minimul/autocomplete-flyout/raw/master/examples/index.html) to get up and running quickly.\r\n\r\n### Minimal usage\r\nBasic requirements are the dom selection and a valid [jqueryui autocomplete data source](http://api.jqueryui.com/1.8/autocomplete/#option-source) with categories defined. See [demo example](https://github.com/minimul/autocomplete-flyout/raw/master/examples/data.set.js) for a starting point.\r\n```\r\nnew AutocompleteFlyout('#transaction-chart', dataSrc);\r\n```\r\n\r\n### Advanced usage with options\r\n\r\n```\r\nnew AutocompleteFlyout('#transaction-chart', dataSrc, { width: 300, maxHeight: 100 });\r\n\r\n```\r\n\r\n### Options\r\nOption                 |  Description  | Default\r\n-----------------------|----------- | -----------------\r\nflyoutWidth            | The width of the second level flyout (must be in px e.g. 300px) | null\r\nwidth                  | The width of the first-level flyout  | 180\r\nmaxHeight              | Max height of flyout | 180\r\nshiftFlyoutFromTop     | Shift the default top start of the flyout | 0\r\nonChoosen              | Callback fired when choosing an item | See below for default\r\noffsetX                | Shift flyout on x-axis | 0\r\noffsetY                | Shift flyout on y-axis | 0\r\nmenuName               | Is for fgMenu. If multiple flyouts are being used this must be unique for each one | hierarchy\r\n\r\n\r\n### Overriding onChoosen\r\nBelow is the default callback function assigned to ```onChoosen```. It simply inserts the selected item into the input field. You can use this example to make a custom solution for your own particular needs.\r\n\r\n```\r\n\r\n    @options.onChoosen ||=  (item, menu, caller) =>\r\n                              # Don't set if a category has been clicked\r\n                              unless item.hasClass('category')\r\n                                caller.prev().val item.text()\r\n                                menu.kill()\r\n\r\n```\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}